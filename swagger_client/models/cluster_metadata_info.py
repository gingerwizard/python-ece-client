# coding: utf-8

"""
    

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ClusterMetadataInfo(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'version': 'int',
        'last_modified': 'datetime',
        'endpoint': 'str',
        'raw': 'object'
    }

    attribute_map = {
        'version': 'version',
        'last_modified': 'last_modified',
        'endpoint': 'endpoint',
        'raw': 'raw'
    }

    def __init__(self, version=None, last_modified=None, endpoint=None, raw=None):
        """
        ClusterMetadataInfo - a model defined in Swagger
        """

        self._version = None
        self._last_modified = None
        self._endpoint = None
        self._raw = None

        self.version = version
        self.last_modified = last_modified
        if endpoint is not None:
          self.endpoint = endpoint
        if raw is not None:
          self.raw = raw

    @property
    def version(self):
        """
        Gets the version of this ClusterMetadataInfo.
        The resource version number of the cluster metadata

        :return: The version of this ClusterMetadataInfo.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """
        Sets the version of this ClusterMetadataInfo.
        The resource version number of the cluster metadata

        :param version: The version of this ClusterMetadataInfo.
        :type: int
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def last_modified(self):
        """
        Gets the last_modified of this ClusterMetadataInfo.
        The most recent time the cluster metadata was changed (ISO format in UTC)

        :return: The last_modified of this ClusterMetadataInfo.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """
        Sets the last_modified of this ClusterMetadataInfo.
        The most recent time the cluster metadata was changed (ISO format in UTC)

        :param last_modified: The last_modified of this ClusterMetadataInfo.
        :type: datetime
        """
        if last_modified is None:
            raise ValueError("Invalid value for `last_modified`, must not be `None`")

        self._last_modified = last_modified

    @property
    def endpoint(self):
        """
        Gets the endpoint of this ClusterMetadataInfo.
        The DNS name of the cluster endpoint, if available

        :return: The endpoint of this ClusterMetadataInfo.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """
        Sets the endpoint of this ClusterMetadataInfo.
        The DNS name of the cluster endpoint, if available

        :param endpoint: The endpoint of this ClusterMetadataInfo.
        :type: str
        """

        self._endpoint = endpoint

    @property
    def raw(self):
        """
        Gets the raw of this ClusterMetadataInfo.
        An unstructured JSON representation of the public and internal state (can be filtered out via URL parameter)

        :return: The raw of this ClusterMetadataInfo.
        :rtype: object
        """
        return self._raw

    @raw.setter
    def raw(self, raw):
        """
        Sets the raw of this ClusterMetadataInfo.
        An unstructured JSON representation of the public and internal state (can be filtered out via URL parameter)

        :param raw: The raw of this ClusterMetadataInfo.
        :type: object
        """

        self._raw = raw

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ClusterMetadataInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
