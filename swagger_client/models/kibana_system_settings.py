# coding: utf-8

"""
    

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class KibanaSystemSettings(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'elasticsearch_url': 'str',
        'elasticsearch_username': 'str',
        'elasticsearch_password': 'str'
    }

    attribute_map = {
        'elasticsearch_url': 'elasticsearch_url',
        'elasticsearch_username': 'elasticsearch_username',
        'elasticsearch_password': 'elasticsearch_password'
    }

    def __init__(self, elasticsearch_url=None, elasticsearch_username=None, elasticsearch_password=None):
        """
        KibanaSystemSettings - a model defined in Swagger
        """

        self._elasticsearch_url = None
        self._elasticsearch_username = None
        self._elasticsearch_password = None

        if elasticsearch_url is not None:
          self.elasticsearch_url = elasticsearch_url
        if elasticsearch_username is not None:
          self.elasticsearch_username = elasticsearch_username
        if elasticsearch_password is not None:
          self.elasticsearch_password = elasticsearch_password

    @property
    def elasticsearch_url(self):
        """
        Gets the elasticsearch_url of this KibanaSystemSettings.
        Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)

        :return: The elasticsearch_url of this KibanaSystemSettings.
        :rtype: str
        """
        return self._elasticsearch_url

    @elasticsearch_url.setter
    def elasticsearch_url(self, elasticsearch_url):
        """
        Sets the elasticsearch_url of this KibanaSystemSettings.
        Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)

        :param elasticsearch_url: The elasticsearch_url of this KibanaSystemSettings.
        :type: str
        """

        self._elasticsearch_url = elasticsearch_url

    @property
    def elasticsearch_username(self):
        """
        Gets the elasticsearch_username of this KibanaSystemSettings.
        Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the password must also be specified)

        :return: The elasticsearch_username of this KibanaSystemSettings.
        :rtype: str
        """
        return self._elasticsearch_username

    @elasticsearch_username.setter
    def elasticsearch_username(self, elasticsearch_username):
        """
        Sets the elasticsearch_username of this KibanaSystemSettings.
        Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the password must also be specified)

        :param elasticsearch_username: The elasticsearch_username of this KibanaSystemSettings.
        :type: str
        """

        self._elasticsearch_username = elasticsearch_username

    @property
    def elasticsearch_password(self):
        """
        Gets the elasticsearch_password of this KibanaSystemSettings.
        Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the username must also be specified)

        :return: The elasticsearch_password of this KibanaSystemSettings.
        :rtype: str
        """
        return self._elasticsearch_password

    @elasticsearch_password.setter
    def elasticsearch_password(self, elasticsearch_password):
        """
        Sets the elasticsearch_password of this KibanaSystemSettings.
        Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the username must also be specified)

        :param elasticsearch_password: The elasticsearch_password of this KibanaSystemSettings.
        :type: str
        """

        self._elasticsearch_password = elasticsearch_password

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, KibanaSystemSettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
